import org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact

def repoUser = findProperty("USERNAME")
def repoPassword = findProperty("PASSWORD")


def getVersionNameElement(name) {
    def branchName = System.getenv("BRANCH_NAME")
    def isDevelopBranch = "develop" == branchName
    def versionArray = version.split("-")
    def number = versionArray[0]
    def branch = version.replace(number + "-g-", "")
    branch = branch.replace(number + "-h-", "")
    branch = branch.replace(number + "-null-", "")
    if (isReleaseBranch()) {
        if (name != "") {
            return number + "-" + name
        }
        return number
    }
    if (isDevelopBranch) {
        if (name != "") {
            return number + "-" + name + "-SNAPSHOT"
        }
        return number + "-SNAPSHOT"

    }
    if (name != "") {

        return number + "-" + name + "-" + branch
    }
    branch = branch.replace(number + "-", "")
    branch = branch.replace(number + "-", "")
    return number + "-" + branch

}

def isReleaseBranch() {
    def branchName = System.getenv("BRANCH_NAME")
    def isReleaseBranch = "master" == branchName
    if (!isReleaseBranch && branchName != null)
        isReleaseBranch = branchName.startsWith("re-")
    return isReleaseBranch
}

afterEvaluate {
    def versionAppGoogle = getVersionNameElement("g")
    def versionAppHuawei = getVersionNameElement("h")
    def versionApp = getVersionNameElement("")
    def groupApp = group
    artifacts {
        archives new DefaultPublishArtifact("maps-huawei", "aar", "aar", null, new Date(), new File("maps/build/outputs/aar/", "maps-" + versionAppHuawei + ".aar"))
        archives new DefaultPublishArtifact("maps-google", "aar", "aar", null, new Date(), new File("maps/build/outputs/aar/", "maps-" + versionAppGoogle + ".aar"))
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                pom {
                    groupId = groupApp
                    artifactId = 'maps'
                    version = versionApp

                }
                addFilter('maps-huawei') { artifact, file ->
                    artifact.name == "maps-huawei"
                }
                addFilter('maps-google') { artifact, file ->
                    artifact.name == "maps-google"
                }
                repository(url: "http://192.168.1.17:8081/repository/maven-snapshots/") {
                    authentication(userName: repoUser, password: repoPassword)
                }
                snapshotRepository(url: "http://192.168.1.17:8081/repository/maven-snapshots/") {
                    authentication(userName: repoUser, password: repoPassword)
                }
                pom("maps-huawei").version = versionApp
                pom("maps-huawei").groupId = groupApp
                pom("maps-huawei").artifactId = 'huawei'

                pom("maps-google").version = versionApp
                pom("maps-google").groupId = groupApp
                pom("maps-google").artifactId = 'google'
            }

        }
    }
}